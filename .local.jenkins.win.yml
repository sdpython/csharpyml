
language: python

python:
  - { PATH: "{{replace(Python39, '\\', '\\\\')}}", VERSION: 3.7, DIST: std }
  
virtualenv:
  - path: {{ospathjoin(root_path, pickname("%NAME_JENKINS%", project_name + "_%VERSION%_%DIST%_%NAME%"), "_venv")}}
  
install:
  - $PYINT -m pip install --upgrade pip
  - pip install --no-cache-dir --no-deps --index http://localhost:8067/simple/ jyquickhelper --extra-index-url=https://pypi.python.org/simple/
  - pip install --no-cache-dir --no-deps --index http://localhost:8067/simple/ pyquickhelper --extra-index-url=https://pypi.python.org/simple/
  - pip install --no-cache-dir --no-deps --index http://localhost:8067/simple/ csharpy --extra-index-url=https://pypi.python.org/simple/
  - pip install -r requirements.txt
  - pip freeze
  - pip freeze > pip_freeze.txt
  - git submodule update --init
  - export DOTNET_CLI_TELEMETRY_OPTOUT=1

before_script:
  # machinelearning
  - cd cscode\machinelearning
  - cmd /C build.cmd -Release
  - cmd /C build.cmd -Debug
  - cd ..\..
  - python -u setup.py copybinml debug
  - python -u setup.py copybinml release
  # machinelearningext
  - xcopy /Y /S cscode\bin\machinelearning\*.* cscode\machinelearningext\dist
  - if not exist cscode\machinelearningext\dist mkdir cscode\machinelearningext\dist
  - cd cscode\machinelearningext\machinelearningext
  - dotnet build -c Release machinelearningext.sln
  - dotnet build -c Debug machinelearningext.sln
  - cd ..\..\..
  - "%PYTHON%\\python -u setup.py copybinmlext Debug"
  - "%PYTHON%\\python -u setup.py copybinmlext Release"  
  # csharpyml
  - cd cscode
  - dotnet build -c Release CSharPyMLExtension_netcore.sln
  - dotnet build -c Debug CSharPyMLExtension_netcore.sln
  - cd ..
  - python -u setup.py copybin
  - python -u setup.py build_ext --inplace
script:
  - { CMD: "python -u setup.py unittests", NAME: "UT" }
after_script:
  - python -u setup.py bdist_wheel
  - if [ ${DIST} != "conda" and ${NAME} == "UT" ] then copy dist\*.whl {{root_path}}\..\..\local_pypi\local_pypi_server fi

documentation:
  - if [ ${NAME} == "UT" ] then python -u setup.py build_sphinx fi
  - if [ ${NAME} == "UT" ] then xcopy /E /C /I /Y _doc\sphinxdoc\build\html dist\html fi
