
language: python

python:
  - { PATH: "{{Python39}}", VERSION: 3.9, DIST: std, PYINT: python3.9, DOTNET_CLI_TELEMETRY_OPTOUT: 1 }
  
virtualenv:
  - path: {{ospathjoin(root_path, pickname("$NAME_JENKINS", project_name + "_$VERSION_$DIST_$NAME"), "_venv")}}
  
install:
  - git submodule update --init
  - $PYINT -m pip install --upgrade pip
  - $PYINT -m pip install --no-cache-dir --upgrade --no-deps --index http://localhost:8067/simple/ jyquickhelper pyquickhelper csharpy pyensae pymyinstall pythonnet --extra-index-url=https://pypi.python.org/simple/
  - $PYINT -m pip install -r requirements.txt
  - $PYINT --version
  - $PYINT -m pip freeze
  - export DOTNET_CLI_TELEMETRY_OPTOUT=1

before_script:
  - export LANG=en_US.UTF-8
  - export DOTNET_CLI_TELEMETRY_OPTOUT=1
  # Build machinelearning.
  - cd cscode/machinelearning
  - bash --verbose build.sh -Release
  - bash --verbose build.sh -Debug
  - cd ../..
  # Copy binaries.
  - $PYINT setup.py copybinml release
  - $PYINT setup.py copybinml debug
  # Build machinelearningext
  - cd cscode/machinelearningext/machinelearningext
  - dotnet build -c Release machinelearningext.sln
  - dotnet build -c Debug machinelearningext.sln
  - cd ../../..
  # Copy binaries.
  - $PYINT setup.py copybinmlext release
  - $PYINT setup.py copybinmlext debug
  # Build csharpyml helpers
  - cd cscode
  - dotnet build -c Release CSharPyMLExtension_netcore.sln
  - dotnet build -c Debug CSharPyMLExtension_netcore.sln
  - cd ..

script:
  - { CMD: "$PYINT -u setup.py unittests", NAME: "UT", CLEAN: "0", SCHEDULER: "H H(1-2) 8 * *" }
  - { CMD: "cd cscode; dotnet test -c Release TestCSharPyMLExtension; dotnet test -c Debug TestCSharPyMLExtension; cd ..", NAME: "UT_CSharp", CLEAN: "0", SCHEDULER: "H H(1-2) 9 * *" }

after_script:
  - $PYINT -u setup.py bdist_wheel
  - if [ ${VERSION} == "3.9" and ${DIST} != "conda" and ${NAME} == "UT" ] then cp dist/*.whl {{root_path}}/../local_pypi/local_pypi_server fi

documentation:
  - if [ ${NAME} == "UT" ] then $PYINT -u setup.py build_sphinx fi
  - if [ ${NAME} == "UT" ] then cp -R -f _doc/sphinxdoc/build/html dist/html fi
